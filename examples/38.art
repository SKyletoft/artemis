// Type aliases
Foo := {a: ℕ, b: ℕ}
Bar := {a: {b: ℤ, c: ℝ}, d: Foo,}
ExplicitEnum := {alpha: (), v: ℤ}
ImplicitEnum := {beta, v: ℤ,}

// Variables
global_foo : Foo = {a: 1, b: 2}
global_inferred_bar := {
	a: {b: 1, c: 2.0},
	d: {a: 3, b: 4},
}

// Functions
λf (foo: Foo) → ℕ = foo.a
λb (bar: {a: {b: ℤ, c: ℝ}, d: Foo},) → ℝ = bar.a.c

λg () → ℤ = {
	// Function that takes an entire block
	x := 16
	y := 2

	x + y
}
